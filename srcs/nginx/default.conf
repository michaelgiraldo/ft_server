##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#

# Upstream to abstract backend connection(s) for php
upstream php {
		server unix:/run/php/php7.3-fpm.sock;
		server localhost;
}

#  HTTP redirect
server  {	
		listen		80 default_server;
		listen		[::]:80 default_server;
		server_name	*.localhost;

		# SSL
		ssl_certificate				/etc/ssl/certs/localhost.crt;
		ssl_certificate_key			/etc/ssl/private/localhost.key;
		return 301	https://$host$request_uri;
}

server {
    	listen 443 ssl default_server;
        listen [::]:443 ssl default_server;

        # SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;


		# Debian Buster package installs 1.14 as 2020-07-27
		# This directive was made obsolete in version 1.15.0
		# Syntax:	ssl on | off;
		# Default:	
		# ssl off;
		# Context:	http, server

		# SSL
		ssl 						on;	
		ssl_certificate				/etc/ssl/certs/localhost.crt;
		ssl_certificate_key			/etc/ssl/private/localhost.key;
		ssl_dhparam					/etc/ssl/private/dhparam.pem;
		ssl_prefer_server_ciphers 	off;

        root /var/www/html;

        # Add index.php to the list if you are using PHP
        index index.php index.html index.htm index.nginx-debian.html;

        server_name	*.localhost;

		autoindex off;

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri/ =404;
        }

        # pass PHP scripts to FastCGI server
        #
        location ~ \.php$ {
                include snippets/fastcgi-php.conf;
        #
        #       # With php-fpm (or other unix sockets):
                fastcgi_pass unix:/run/php/php7.3-fpm.sock;
        #       # With php-cgi (or other tcp sockets):
        #       fastcgi_pass 127.0.0.1:9000;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #       deny all;
        #}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#       listen 80;
#       listen [::]:80;
#
#       server_name example.com;
#
#       root /var/www/example.com;
#       index index.html;
#
#       location / {
#               try_files $uri $uri/ =404;
#       }
#}